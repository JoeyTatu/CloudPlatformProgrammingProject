{"changed":true,"filter":false,"title":"awk_rekognition_tutorial.py","tooltip":"/flaskapp/testing/awk_rekognition_tutorial.py","value":"# @Ref - PyLenin - Part 1: https://www.youtube.com/watch?v=Jtr0gyM9rCI\n# @Ref - PyLenin - Part 2: https://www.youtube.com/watch?v=_cQEuLGv45o\n# @Ref - PyLenin - Part 3: https://www.youtube.com/watch?v=P8MKBU3dx-k\n# @Ref - PyLenin - Part 4: https://www.youtube.com/watch?v=mQYjSsH2-KY\n\nimport boto3\nimport json\n\nBUCKET = \"cpp-project-jtatu\"\n\nFOLDER = 'testing/'\nJOEY =  FOLDER + \"Joey_30_Sept.png\"\nBEYONCE = FOLDER + \"beyonce_rekognition_moderation_testing.jpg\"\nMANBEARD = FOLDER + \"man_beard.jpg\"\nMEN = FOLDER + \"men_group.jpg\"\n\n#photo = \"joey.png\"\n\nclient = boto3.client('rekognition')\n\n## Can do directly form S3 but must covert to bytes for local storage\n# with open(photo, 'rb') as source_image:\n#     source_bytes = source_image.read()\n    \n#Local storage\n#response = str(client.detect_labels(Image=\n#                                {'Bytes': source_bytes},\n#                                MaxLabels = 10,\n#                                MinConfidence=95)\n#                                )\n   \n#S3 Bucket                                \n# response = client.detect_labels(Image=\n#                                 {'S3Object': {\n#                                     'Bucket': BUCKET,\n#                                     'Name': JOEY\n#                                 }},\n#                                 MaxLabels = 10,\n#                                 MinConfidence=95)\n\n#Moderation testing\n# response = client.detect_moderation_labels(Image=\n#                                     {'S3Object': {\n#                                         'Bucket': BUCKET,\n#                                         'Name': BEYONCE\n#                                         }\n#                                     },\n#                                 MinConfidence=95)\n\n#Face detection\nresponse = client.detect_faces(Image=\n                                    {'S3Object': {\n                                        'Bucket': BUCKET,\n                                        'Name': MEN\n                                        }\n                                    },\n                                    Attributes=[\n                                        'ALL',\n                                    ]\n                                )\n\n# for key, value in response.items():\n#     if key == 'FaceDetails':\n#         for people_att in value:\n#             print(people_att)\n#             print(\"\\n===========================\\n\")\n\n#json_data = json.loads(response.text)\n\n# To save to file. \n# f = open(\"json_data.json\", \"x\")\n# f.write(response)\n#print(type(response))\n# print(response)\n\njson_object = json.dumps(response) # convert type dict to json\nprint(json_object)","undoManager":{"mark":1,"position":10,"stack":[[{"start":{"row":0,"column":0},"end":{"row":80,"column":0},"action":"insert","lines":["# @Ref - PyLenin - Part 1: https://www.youtube.com/watch?v=Jtr0gyM9rCI","# @Ref - PyLenin - Part 2: https://www.youtube.com/watch?v=_cQEuLGv45o","# @Ref - PyLenin - Part 3: https://www.youtube.com/watch?v=P8MKBU3dx-k","# @Ref - PyLenin - Part 4: https://www.youtube.com/watch?v=mQYjSsH2-KY","","import boto3","import json","","BUCKET = \"cpp-project-jtatu\"","","FOLDER = 'testing/'","JOEY =  FOLDER + \"Joey_30_Sept.png\"","BEYONCE = FOLDER + \"beyonce_rekognition_moderation_testing.jpg\"","MANBEARD = FOLDER + \"man_beard.jpg\"","MEN = FOLDER + \"men_group.jpg\"","","#photo = \"joey.png\"","","client = boto3.client('rekognition')","","## Can do directly form S3 but must covert to bytes for local storage","# with open(photo, 'rb') as source_image:","#     source_bytes = source_image.read()","    ","#Local storage","#response = str(client.detect_labels(Image=","#                                {'Bytes': source_bytes},","#                                MaxLabels = 10,","#                                MinConfidence=95)","#                                )","   ","#S3 Bucket                                ","# response = client.detect_labels(Image=","#                                 {'S3Object': {","#                                     'Bucket': BUCKET,","#                                     'Name': JOEY","#                                 }},","#                                 MaxLabels = 10,","#                                 MinConfidence=95)","","#Moderation testing","# response = client.detect_moderation_labels(Image=","#                                     {'S3Object': {","#                                         'Bucket': BUCKET,","#                                         'Name': BEYONCE","#                                         }","#                                     },","#                                 MinConfidence=95)","","#Face detection","response = client.detect_faces(Image=","                                    {'S3Object': {","                                        'Bucket': BUCKET,","                                        'Name': MEN","                                        }","                                    },","                                    Attributes=[","                                        'ALL',","                                    ]","                                )","","# for key, value in response.items():","#     if key == 'FaceDetails':","#         for people_att in value:","#             print(people_att)","#             print(\"\\n===========================\\n\")","","#json_data = json.loads(response.text)","","# To save to file. ","# f = open(\"json_data.json\", \"x\")","# f.write(response)","#print(type(response))","# print(response)","","json_object = json.dumps(response)","print(json_object)","","","    ",""],"id":1}],[{"start":{"row":79,"column":4},"end":{"row":80,"column":0},"action":"remove","lines":["",""],"id":2},{"start":{"row":79,"column":0},"end":{"row":79,"column":4},"action":"remove","lines":["    "]},{"start":{"row":78,"column":0},"end":{"row":79,"column":0},"action":"remove","lines":["",""]},{"start":{"row":77,"column":0},"end":{"row":78,"column":0},"action":"remove","lines":["",""]},{"start":{"row":76,"column":18},"end":{"row":77,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":75,"column":34},"end":{"row":75,"column":35},"action":"insert","lines":[" "],"id":3},{"start":{"row":75,"column":35},"end":{"row":75,"column":36},"action":"insert","lines":["#"]}],[{"start":{"row":75,"column":36},"end":{"row":75,"column":37},"action":"insert","lines":[" "],"id":4},{"start":{"row":75,"column":37},"end":{"row":75,"column":38},"action":"insert","lines":["c"]},{"start":{"row":75,"column":38},"end":{"row":75,"column":39},"action":"insert","lines":["o"]},{"start":{"row":75,"column":39},"end":{"row":75,"column":40},"action":"insert","lines":["n"]}],[{"start":{"row":75,"column":39},"end":{"row":75,"column":40},"action":"remove","lines":["n"],"id":5}],[{"start":{"row":75,"column":39},"end":{"row":75,"column":40},"action":"insert","lines":["n"],"id":6},{"start":{"row":75,"column":40},"end":{"row":75,"column":41},"action":"insert","lines":["v"]},{"start":{"row":75,"column":41},"end":{"row":75,"column":42},"action":"insert","lines":["e"]},{"start":{"row":75,"column":42},"end":{"row":75,"column":43},"action":"insert","lines":["r"]},{"start":{"row":75,"column":43},"end":{"row":75,"column":44},"action":"insert","lines":["t"]}],[{"start":{"row":75,"column":44},"end":{"row":75,"column":45},"action":"insert","lines":[" "],"id":7},{"start":{"row":75,"column":45},"end":{"row":75,"column":46},"action":"insert","lines":["d"]},{"start":{"row":75,"column":46},"end":{"row":75,"column":47},"action":"insert","lines":["i"]},{"start":{"row":75,"column":47},"end":{"row":75,"column":48},"action":"insert","lines":["c"]},{"start":{"row":75,"column":48},"end":{"row":75,"column":49},"action":"insert","lines":["t"]}],[{"start":{"row":75,"column":49},"end":{"row":75,"column":50},"action":"insert","lines":[" "],"id":8},{"start":{"row":75,"column":50},"end":{"row":75,"column":51},"action":"insert","lines":["t"]},{"start":{"row":75,"column":51},"end":{"row":75,"column":52},"action":"insert","lines":["o"]}],[{"start":{"row":75,"column":52},"end":{"row":75,"column":53},"action":"insert","lines":[" "],"id":9},{"start":{"row":75,"column":53},"end":{"row":75,"column":54},"action":"insert","lines":["j"]},{"start":{"row":75,"column":54},"end":{"row":75,"column":55},"action":"insert","lines":["s"]},{"start":{"row":75,"column":55},"end":{"row":75,"column":56},"action":"insert","lines":["o"]},{"start":{"row":75,"column":56},"end":{"row":75,"column":57},"action":"insert","lines":["n"]}],[{"start":{"row":75,"column":45},"end":{"row":75,"column":46},"action":"insert","lines":["t"],"id":10},{"start":{"row":75,"column":46},"end":{"row":75,"column":47},"action":"insert","lines":["y"]},{"start":{"row":75,"column":47},"end":{"row":75,"column":48},"action":"insert","lines":["p"]},{"start":{"row":75,"column":48},"end":{"row":75,"column":49},"action":"insert","lines":["e"]}],[{"start":{"row":75,"column":49},"end":{"row":75,"column":50},"action":"insert","lines":[" "],"id":11}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":0},"end":{"row":76,"column":18},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1639753602432}